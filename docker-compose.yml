version: '3.8'

services:
  # Servicio de la base de datos PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: inventario-db
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

  # Servicio del backend (Node.js/Express)
  backend:
    build:
      context: ./backend # Docker buscará el Dockerfile en la carpeta 'backend'
      dockerfile: Dockerfile
    container_name: backend-app
    restart: always
    depends_on:
      - db
    env_file:
      - ./.env # Carga las variables de entorno para el backend
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules # Evita que los node_modules locales se monten en el contenedor

  # Servicio del frontend (HTML/CSS/JS)
  frontend:
    build:
      context: ./frontend # Docker buscará el Dockerfile en la carpeta 'frontend'
      dockerfile: Dockerfile
    container_name: frontend-app
    restart: always
    ports:
      - "80:80"
    depends_on:
      - backend # El frontend depende del backend para funcionar